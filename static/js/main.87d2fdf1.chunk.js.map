{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_LENGTH","SORT_BY_ALPHABET","App","useState","sortValue","setSortValue","isReverse","setIsReverse","sortedGoods","goods","sort","goodA","goodB","length","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,SACjBC,EAAmB,WAyBlB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA1BR,SAA0BC,EAAOL,EAAWE,GAoB1C,OAnBIF,GACFK,EAAMC,MAAK,SAACC,EAAOC,GACjB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKZ,EACH,OAAOU,EAAMG,cAAcF,GAE7B,QACE,OAAOH,MAKXH,GACFG,EAAMM,UAGDN,EAMaO,CAAiB,GAAD,OAC9BjB,GAAkBK,EAAWE,GAGnC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPb,EAAaJ,IAEfkB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYhB,IAAcH,IANhC,iCAWA,wBACEiB,QAAS,WACPb,EAAaL,IAEfmB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYhB,IAAcJ,IANhC,4BAWA,wBACEkB,QAAS,WACPX,GAAcD,IAEhBa,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAad,IANnB,sBAWEF,GAAaE,IACb,wBACEY,QAAS,WACPb,EAAa,IACbE,GAAa,IAEfY,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGT,EAAYa,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.87d2fdf1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_ALPHABET = 'alphabet';\n\nfunction getPreparedGoods(goods, sortValue, isReverse) {\n  if (sortValue) {\n    goods.sort((goodA, goodB) => {\n      switch (sortValue) {\n        case SORT_BY_LENGTH:\n          return goodA.length - goodB.length;\n\n        case SORT_BY_ALPHABET:\n          return goodA.localeCompare(goodB);\n\n        default:\n          return goods;\n      }\n    });\n  }\n\n  if (isReverse) {\n    goods.reverse();\n  }\n\n  return goods;\n}\n\nexport const App = () => {\n  const [sortValue, setSortValue] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const sortedGoods = getPreparedGoods(\n    [...goodsFromServer], sortValue, isReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortValue(SORT_BY_ALPHABET);\n          }}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortValue !== SORT_BY_ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortValue(SORT_BY_LENGTH);\n          }}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortValue !== SORT_BY_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReverse(!isReverse);\n          }}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortValue || isReverse) && (\n          <button\n            onClick={() => {\n              setSortValue('');\n              setIsReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}